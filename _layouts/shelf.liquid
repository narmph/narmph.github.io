---
layout: page
---
{{ content }}

<!-- Tab navigation for Books/Movies -->
<div class="shelf-tabs">
  <button class="shelf-tab active" onclick="showShelf('books-section')">Books</button>
  <button class="shelf-tab" onclick="showShelf('movies-section')">Movies/TV</button>
</div>

<!-- Books Section -->
<div id="books-section" class="shelf-section">
  <h1>Books</h1>
  {% assign books_collection = site.books %}
  {% if books_collection and books_collection.size > 0 %}
    {% comment %} First, let's check what date field we're using {% endcomment %}
    {% for book in books_collection limit:1 %}
      <!-- Debug: Book has date: {{ book.date }}, started: {{ book.started }}, finished: {{ book.finished }} -->
    {% endfor %}
    
    {% comment %} Create a custom sort key for each book {% endcomment %}
    {% assign sorted_books = "" | split: "" %}
    
    {% for book in books_collection %}
      {% assign status = book.status | downcase | strip %}
      
      {% comment %} Determine the most recent date for this book {% endcomment %}
      {% assign sort_date = book.date %}
      {% if book.finished %}
        {% assign sort_date = book.finished %}
      {% elsif book.started %}
        {% assign sort_date = book.started %}
      {% endif %}
      
      {% comment %} Create a sorting priority {% endcomment %}
      {% case status %}
        {% when 'reading' %}
          {% assign priority = 1 %}
        {% when 'finished' %}
          {% assign priority = 2 %}
        {% when 'queued' %}
          {% assign priority = 3 %}
        {% else %}
          {% assign priority = 4 %}
      {% endcase %}
      
      {% comment %} Create a custom object with sorting info {% endcomment %}
      {% assign book_data = book | map: "title" | first %}
      {% assign book_with_sort = book %}
      {% assign book_with_sort.sort_priority = priority %}
      {% assign book_with_sort.sort_date = sort_date %}
      
      {% assign sorted_books = sorted_books | push: book %}
    {% endfor %}
    
    {% comment %} Group books by status {% endcomment %}
    {% assign reading_books = "" | split: "" %}
    {% assign finished_books = "" | split: "" %}
    {% assign queued_books = "" | split: "" %}
    {% assign other_books = "" | split: "" %}
    
    {% for book in books_collection %}
      {% assign status = book.status | downcase | strip %}
      {% case status %}
        {% when 'reading' %}
          {% assign reading_books = reading_books | push: book %}
        {% when 'finished' %}
          {% assign finished_books = finished_books | push: book %}
        {% when 'queued' %}
          {% assign queued_books = queued_books | push: book %}
        {% else %}
          {% assign other_books = other_books | push: book %}
      {% endcase %}
    {% endfor %}
    
    {% comment %} Sort each group by the most relevant date field {% endcomment %}
    {% assign reading_books = reading_books | sort: "started" | reverse %}
    {% assign finished_books = finished_books | sort: "finished" | reverse %}
    {% assign queued_books = queued_books | sort: "date" | reverse %}
    {% assign other_books = other_books | sort: "date" | reverse %}
    
    {% comment %} Concatenate all groups {% endcomment %}
    {% assign books = reading_books | concat: finished_books | concat: queued_books | concat: other_books %}
    
    <!-- Debug: Total books: {{ books.size }}, Reading: {{ reading_books.size }}, Finished: {{ finished_books.size }}, Queued: {{ queued_books.size }}, Other: {{ other_books.size }} -->
    
    <ul class="shelf-items">
    {% for item in books %}
      <figure class="cover">
        <a class="cover-link" href="{{ item.url | relative_url }}">
          {% if item.cover %}
            <img alt="{{ item.title }} cover" src="{{ item.cover | prepend: page.covers | relative_url }}" style="height:200px">
          {% elsif item.olid %}
            <img alt="{{ item.title }} cover" src="http://covers.openlibrary.org/b/olid/{{ item.olid }}-L.jpg?default=false" style="height:200px">
          {% elsif item.isbn %}
            <img alt="{{ item.title }} cover" src="http://covers.openlibrary.org/b/isbn/{{ item.isbn }}-L.jpg?default=false" style="height:200px">
          {% endif %}
          {% if item.status %}
            {% assign statuses = 'abandoned,finished,interested,paused,queued,reading,reread' | split: ',' %}
            {% assign status = item.status | downcase | strip %}
            {% if statuses contains status %}
              <figcaption class="{{ status | downcase }}">{{ status | upcase }}</figcaption>
            {% else %}
              <figcaption class="uncategorized">UNCATEGORIZED</figcaption>
            {% endif %}
          {% else %}
            <figcaption class="uncategorized">UNCATEGORIZED</figcaption>
          {% endif %}
        </a>
        <!-- Debug: {{ item.title }} - Status: {{ item.status }}, Date: {{ item.date }}, Started: {{ item.started }}, Finished: {{ item.finished }} -->
      </figure>
    {% endfor %}
    </ul>
  {% else %}
    <p>No books found.</p>
  {% endif %}
</div>

<!-- Movies Section -->
<div id="movies-section" class="shelf-section" style="display: none;">
  <h1>Movies/TV</h1>
  {% assign movies_collection = site.movies %}
  {% if movies_collection and movies_collection.size > 0 %}
    {% comment %} First, let's check what date field we're using {% endcomment %}
    {% for movie in movies_collection limit:1 %}
      <!-- Debug: Movie has date: {{ movie.date }}, watched: {{ movie.watched }} -->
    {% endfor %}
    
    {% comment %} Group movies by status {% endcomment %}
    {% assign watching_movies = "" | split: "" %}
    {% assign finished_movies = "" | split: "" %}
    {% assign queued_movies = "" | split: "" %}
    {% assign other_movies = "" | split: "" %}
    
    {% for movie in movies_collection %}
      {% assign status = movie.status | downcase | strip %}
      {% case status %}
        {% when 'watching' %}
          {% assign watching_movies = watching_movies | push: movie %}
        {% when 'finished' %}
          {% assign finished_movies = finished_movies | push: movie %}
        {% when 'queued' %}
          {% assign queued_movies = queued_movies | push: movie %}
        {% else %}
          {% assign other_movies = other_movies | push: movie %}
      {% endcase %}
    {% endfor %}
    
    {% comment %} Sort each group by the most relevant date field {% endcomment %}
    {% assign watching_movies = watching_movies | sort: "date" | reverse %}
    {% assign finished_movies = finished_movies | sort: "watched" | reverse %}
    {% assign queued_movies = queued_movies | sort: "date" | reverse %}
    {% assign other_movies = other_movies | sort: "date" | reverse %}
    
    {% comment %} Concatenate all groups {% endcomment %}
    {% assign movies = watching_movies | concat: finished_movies | concat: queued_movies | concat: other_movies %}
    
    <!-- Debug: Total movies: {{ movies.size }}, Watching: {{ watching_movies.size }}, Finished: {{ finished_movies.size }}, Queued: {{ queued_movies.size }}, Other: {{ other_movies.size }} -->
    
    <ul class="shelf-items">
    {% for item in movies %}
      <figure class="cover">
        <a class="cover-link" href="{{ item.url | relative_url }}">
          {% if item.poster %}
            <img alt="{{ item.title }} poster" src="{{ item.poster | prepend: page.covers | relative_url }}" style="height:200px">
          {% endif %}
          {% if item.status %}
            {% assign movie_statuses = 'abandoned,finished,interested,paused,queued,watching,rewatched' | split: ',' %}
            {% assign status = item.status | downcase | strip %}
            {% if movie_statuses contains status %}
              <figcaption class="{{ status | downcase }}">{{ status | upcase }}</figcaption>
            {% else %}
              <figcaption class="uncategorized">UNCATEGORIZED</figcaption>
            {% endif %}
          {% else %}
            <figcaption class="uncategorized">UNCATEGORIZED</figcaption>
          {% endif %}
        </a>
        <!-- Debug: {{ item.title }} - Status: {{ item.status }}, Date: {{ item.date }}, Watched: {{ item.watched }} -->
      </figure>
    {% endfor %}
    </ul>
  {% else %}
    <p>No movies found.</p>
  {% endif %}
</div>

<script>
  function showShelf(sectionId) {
    // Hide all shelf sections
    var sections = document.getElementsByClassName('shelf-section');
    for (var i = 0; i < sections.length; i++) {
      sections[i].style.display = 'none';
    }
    
    // Deactivate all tabs
    var tabs = document.getElementsByClassName('shelf-tab');
    for (var i = 0; i < tabs.length; i++) {
      tabs[i].classList.remove('active');
    }
    
    // Show the selected section
    document.getElementById(sectionId).style.display = 'block';
    
    // Activate the clicked tab
    var activeTabIndex = (sectionId === 'books-section') ? 0 : 1;
    tabs[activeTabIndex].classList.add('active');
  }
</script>

<style>
  .shelf-tabs {
    display: flex;
    border-bottom: 1px solid #ddd;
    margin-bottom: 20px;
  }
  
  .shelf-tab {
    background-color: transparent;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
  }
  
  .shelf-tab:hover {
    background-color: #f5f5f5;
  }
  
  .shelf-tab.active {
    border-bottom: 3px solid var(--global-theme-color);
    font-weight: bold;
  }
  
  .shelf-items {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    padding: 0;
    list-style-type: none;
  }
  
  .cover {
    margin: 0;
    position: relative;
    transition: transform 0.3s;
  }
  
  .cover:hover {
    transform: translateY(-5px);
  }
  
  figcaption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 5px;
    text-align: center;
    font-size: 12px;
    font-weight: bold;
    color: white;
  }
  
  .reading, .watching { background-color: #4CAF50; }
  .finished { background-color: #2196F3; }
  .queued { background-color: #FF9800; }
  .interested { background-color: #9C27B0; }
  .abandoned { background-color: #F44336; }
  .paused { background-color: #607D8B; }
  .reread, .rewatched { background-color: #009688; }
  .uncategorized { background-color: #9E9E9E; }
</style>